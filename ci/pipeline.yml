---
yaml_anchors:
  git-token: &git-token
    username: x-oauth-basic
    password: ((carnegierobotics-access-token))
    git_config:
      - name: "url.https://x-oauth-basic:((carnegierobotics-access-token))@github.com/.insteadOf"
        value: "git@github.com:"
  job-config: &job-config
    build_log_retention: &build-log-retention
      builds: 10
      minimum_succeeded_builds: 3
  step-config: &step-config
    tags: [on-prem]
resources:
  - name: repo
    type: git
    icon: git
    source:
      uri: git@github.com:carnegierobotics/terraform-provider-greenhouse.git 
      branch: ((project-branch))
      <<: *git-token 
    <<: *step-config
  - name: build-image
    type: registry-image
    icon: docker 
    check_every: never
    source:
      repository: crl-docker.jfrog.io/golang 
      tag: latest
      username: ((writer-artifactory-user))
      password: ((writer-artifactory-token))
    <<: *step-config
  - name: built-provider 
    type: rt-package
    icon: package-up 
    source:
      url: https://crl.jfrog.io/artifactory
      access_token: ((writer-artifactory-token))
      repository: devops-generic-local
      is_deb: false
      path_pattern: "terraform-provider-greenhouse"
      recursive: true
    <<: *step-config
resource_types:
  - name: rt-package
    type: docker-image
    source:
      repository: crl-docker.jfrog.io/carnegierobotics/concourse-artifactory-resource
      username: ((writer-artifactory-user))
      password: ((writer-artifactory-token))
      tag: golang
    <<: *step-config
jobs:
  - name: apply-template
    old_name: apply-template
    plan:
      - get: repo 
        trigger: true
        <<: *step-config
      - set_pipeline: self
        file: repo/ci/pipeline.yml
        var_files: 
          - repo/ci/vars.yml
  - name: build
    <<: *job-config
    plan:
      - get: repo
        trigger: true
        <<: *step-config
        passed: [apply-template]
      - get: build-image
        trigger: false
        <<: *step-config
      - task: build
        privileged: false 
        file: repo/ci/tasks/build.yml
        image: build-image
        input_mapping:
          repo: repo 
        output_mapping:
          build: build 
        <<: *step-config
      - put: built-provider
        <<: *step-config
        params:
          path: build/
          glob: "**/*/terraform-provider-greenhouse"
        
